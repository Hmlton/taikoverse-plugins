/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type VoxelCoordStruct = {
  x: BigNumberish;
  y: BigNumberish;
  z: BigNumberish;
};

export type VoxelCoordStructOutput = [number, number, number] & {
  x: number;
  y: number;
  z: number;
};

export interface OccurrenceSystemInterface extends utils.Interface {
  contractName: "OccurrenceSystem";
  functions: {
    "Bedrock((int32,int32,int32))": FunctionFragment;
    "BlackFlower((int32,int32,int32))": FunctionFragment;
    "BlueFlower((int32,int32,int32))": FunctionFragment;
    "Clay((int32,int32,int32))": FunctionFragment;
    "Coal((int32,int32,int32))": FunctionFragment;
    "CyanFlower((int32,int32,int32))": FunctionFragment;
    "Diamond((int32,int32,int32))": FunctionFragment;
    "Dirt((int32,int32,int32))": FunctionFragment;
    "Grass((int32,int32,int32))": FunctionFragment;
    "GrassPlant((int32,int32,int32))": FunctionFragment;
    "GrayFlower((int32,int32,int32))": FunctionFragment;
    "GreenFlower((int32,int32,int32))": FunctionFragment;
    "Kelp((int32,int32,int32))": FunctionFragment;
    "Leaves((int32,int32,int32))": FunctionFragment;
    "LightBlueFlower((int32,int32,int32))": FunctionFragment;
    "LightGrayFlower((int32,int32,int32))": FunctionFragment;
    "LimeFlower((int32,int32,int32))": FunctionFragment;
    "Log((int32,int32,int32))": FunctionFragment;
    "MagentaFlower((int32,int32,int32))": FunctionFragment;
    "OrangeFlower((int32,int32,int32))": FunctionFragment;
    "PinkFlower((int32,int32,int32))": FunctionFragment;
    "PurpleFlower((int32,int32,int32))": FunctionFragment;
    "RedFlower((int32,int32,int32))": FunctionFragment;
    "Sand((int32,int32,int32))": FunctionFragment;
    "Snow((int32,int32,int32))": FunctionFragment;
    "Stone((int32,int32,int32))": FunctionFragment;
    "Water((int32,int32,int32))": FunctionFragment;
    "Wool((int32,int32,int32))": FunctionFragment;
    "execute(bytes)": FunctionFragment;
    "executeTyped(uint256,(int32,int32,int32))": FunctionFragment;
    "owner()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "Bedrock",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "BlackFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "BlueFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Clay",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Coal",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "CyanFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Diamond",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Dirt",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Grass",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "GrassPlant",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "GrayFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "GreenFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Kelp",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Leaves",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "LightBlueFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "LightGrayFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "LimeFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Log",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "MagentaFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "OrangeFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "PinkFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "PurpleFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "RedFlower",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Sand",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Snow",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Stone",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Water",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "Wool",
    values: [VoxelCoordStruct]
  ): string;
  encodeFunctionData(functionFragment: "execute", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "executeTyped",
    values: [BigNumberish, VoxelCoordStruct]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;

  decodeFunctionResult(functionFragment: "Bedrock", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "BlackFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "BlueFlower", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Clay", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Coal", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "CyanFlower", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Diamond", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Dirt", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Grass", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "GrassPlant", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "GrayFlower", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "GreenFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "Kelp", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Leaves", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "LightBlueFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LightGrayFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "LimeFlower", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Log", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "MagentaFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OrangeFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "PinkFlower", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "PurpleFlower",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "RedFlower", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Sand", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Snow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Stone", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Water", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Wool", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeTyped",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;

  events: {};
}

export interface OccurrenceSystem extends BaseContract {
  contractName: "OccurrenceSystem";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OccurrenceSystemInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    Bedrock(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    BlackFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    BlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Clay(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Coal(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    CyanFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Diamond(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Dirt(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Grass(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    GrassPlant(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    GrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    GreenFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Kelp(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Leaves(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    LightBlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    LightGrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    LimeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Log(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    MagentaFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    OrangeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    PinkFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    PurpleFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    RedFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Sand(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Snow(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Stone(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Water(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    Wool(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    execute(arguments: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    executeTyped(
      blockType: BigNumberish,
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;
  };

  Bedrock(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  BlackFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  BlueFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Clay(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Coal(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  CyanFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Diamond(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Dirt(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Grass(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  GrassPlant(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  GrayFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  GreenFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Kelp(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Leaves(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  LightBlueFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  LightGrayFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  LimeFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Log(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  MagentaFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  OrangeFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  PinkFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  PurpleFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  RedFlower(
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  Sand(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Snow(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Stone(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Water(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  Wool(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

  execute(arguments: BytesLike, overrides?: CallOverrides): Promise<string>;

  executeTyped(
    blockType: BigNumberish,
    coord: VoxelCoordStruct,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    Bedrock(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BlackFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Clay(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Coal(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CyanFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Diamond(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Dirt(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Grass(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GrassPlant(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GreenFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Kelp(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Leaves(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LightBlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LightGrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LimeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Log(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

    MagentaFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    OrangeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PinkFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PurpleFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    RedFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Sand(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Snow(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Stone(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Water(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Wool(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    execute(arguments: BytesLike, overrides?: CallOverrides): Promise<string>;

    executeTyped(
      blockType: BigNumberish,
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    Bedrock(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BlackFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    BlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Clay(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Coal(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    CyanFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Diamond(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Dirt(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Grass(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GrassPlant(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    GreenFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Kelp(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Leaves(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LightBlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LightGrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    LimeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Log(coord: VoxelCoordStruct, overrides?: CallOverrides): Promise<BigNumber>;

    MagentaFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    OrangeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PinkFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    PurpleFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    RedFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Sand(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Snow(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Stone(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Water(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    Wool(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    execute(
      arguments: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    executeTyped(
      blockType: BigNumberish,
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    Bedrock(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BlackFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    BlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Clay(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Coal(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    CyanFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Diamond(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Dirt(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Grass(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GrassPlant(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    GreenFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Kelp(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Leaves(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LightBlueFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LightGrayFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LimeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Log(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MagentaFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    OrangeFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PinkFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PurpleFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    RedFlower(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Sand(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Snow(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Stone(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Water(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    Wool(
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    execute(
      arguments: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    executeTyped(
      blockType: BigNumberish,
      coord: VoxelCoordStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
